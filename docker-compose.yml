version: '3.8'

services:
  radon-mistral-api:
    build: .
    container_name: radon-mistral-api
    ports:
      - "8000:8000"
    environment:
      - MODEL_CONFIG_PATH=configs/model_config_mistral_2b.json
      - MODEL_PATH=./models/checkpoint
      - TOKENIZER_PATH=./tokenizer/checkpoint
      - DEVICE=cuda
      - USE_FLASH_ATTENTION=true
      - MEMORY_LIMIT=2GB
      - VK_ACCESS_TOKEN=${VK_ACCESS_TOKEN:-}
      - VK_CONFIRMATION_CODE=${VK_CONFIRMATION_CODE:-default_confirmation_code}
    volumes:
      - ./logs:/app/logs
      - ./outputs:/app/outputs
      - ./checkpoints:/app/checkpoints
      - ./models:/app/models
      - ./tokenizer:/app/tokenizer
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # CPU-only version for development
  radon-mistral-api-cpu:
    build: .
    container_name: radon-mistral-api-cpu
    ports:
      - "8001:8000"
    environment:
      - MODEL_CONFIG_PATH=configs/model_config_mistral_2b.json
      - MODEL_PATH=./models/checkpoint
      - TOKENIZER_PATH=./tokenizer/checkpoint
      - DEVICE=cpu
      - USE_FLASH_ATTENTION=false
      - VK_ACCESS_TOKEN=${VK_ACCESS_TOKEN:-}
      - VK_CONFIRMATION_CODE=${VK_CONFIRMATION_CODE:-default_confirmation_code}
    volumes:
      - ./logs:/app/logs
      - ./outputs:/app/outputs
      - ./checkpoints:/app/checkpoints
      - ./models:/app/models
      - ./tokenizer:/app/tokenizer
    restart: unless-stopped
    profiles:
      - cpu
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add a reverse proxy
  nginx:
    image: nginx:alpine
    container_name: radon-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - radon-api
    restart: unless-stopped
    profiles:
      - production

  # Optional: Add monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: radon-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    restart: unless-stopped
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: radon-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
    restart: unless-stopped
    profiles:
      - monitoring

volumes:
  grafana-storage:
